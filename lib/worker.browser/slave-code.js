module.exports = "/*eslint-env worker*/\r\n/*global importScripts*/\r\n/*eslint-disable no-console*/\r\nself.module = {\r\n  exports : function() {\r\n    if (console) { console.error('No thread logic initialized.'); }\r\n  }\r\n};\r\n\r\nfunction handlerDone() {\r\n  var args = Array.prototype.slice.call(arguments, 0);\r\n  this.postMessage({ response : args });\r\n}\r\n\r\nfunction handlerProgress(progress) {\r\n  this.postMessage({ progress : progress });\r\n}\r\n\r\nfunction handlerError(error) {\r\n  // Need to clone error manually to avoid DataCloneError, since errors cannot be send\r\n  var cloned = {\r\n    message: error.message,\r\n    name: error.name,\r\n    stack: error.stack\r\n  };\r\n  this.postMessage({ error : cloned });\r\n}\r\n\r\nfunction handlerDoneTransfer() {\r\n  var args = Array.prototype.slice.call(arguments);\r\n  var lastArg = args.pop();\r\n\r\n  if (!(lastArg instanceof Array) && this.console) {\r\n    console.error('Expected 2nd parameter of <doneCallback>.transfer() to be an array. Got:', lastArg);\r\n  }\r\n\r\n  this.postMessage({ response : args }, lastArg);\r\n}\r\n\r\nfunction isPromise (thing) {\r\n  return thing && typeof thing.then === 'function';\r\n}\r\n\r\nself.onmessage = function (event) {\r\n  var scripts = event.data.scripts;\r\n  if (scripts && scripts.length > 0 && typeof importScripts !== 'function') {\r\n    throw new Error('importScripts() not supported.');\r\n  }\r\n\r\n  if (event.data.initByScripts) {\r\n    importScripts.apply(null, scripts);\r\n  }\r\n\r\n  if (event.data.initByMethod) {\r\n    // Clear `this.module.exports` first, to avoid trouble with importScripts' CommonJS detection\r\n    delete this.module.exports;\r\n  \r\n    if (scripts && scripts.length > 0) {\r\n      importScripts.apply(null, scripts);\r\n    }\r\n\r\n    var method = event.data.method;\r\n    this.module.exports = Function.apply(null, method.args.concat(method.body));\r\n  }\r\n\r\n  if (event.data.doRun) {\r\n    var handler = this.module.exports;\r\n\r\n    if (typeof handler !== 'function') {\r\n      throw new Error('Cannot run thread logic. No handler has been exported.');\r\n    }\r\n\r\n    var preparedHandlerDone = handlerDone.bind(this);\r\n    preparedHandlerDone.transfer = handlerDoneTransfer.bind(this);\r\n\r\n    var returned = handler.call(this, event.data.param, preparedHandlerDone, handlerProgress.bind(this));\r\n\r\n    if (isPromise(returned)) {\r\n      returned.then(preparedHandlerDone, handlerError.bind(this));\r\n    }\r\n  }\r\n}.bind(self);\r\n";
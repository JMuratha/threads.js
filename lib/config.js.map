{"version":3,"sources":["config.js"],"names":["getConfig","setConfig","configuration","basepath","node","web","fallback","slaveScriptUrl","configDeepMerge","destObj","srcObj","ancestorProps","Object","keys","forEach","propKey","srcValue","ancestorPropsAndThis","concat","Error","join","config","get","set","newConfig"],"mappings":";;;;;;QA2CgBA,S,GAAAA,S;QAIAC,S,GAAAA,S;AA/ChB,IAAMC,gBAAgB;AACpBC,YAAW;AACTC,UAAO,EADE;AAETC,SAAO;AAFE,GADS;AAKpBC,YAAW;AACTC,oBAAiB;AADR;AALS,CAAtB;;AAUA,SAASC,eAAT,CAAyBC,OAAzB,EAAkCC,MAAlC,EAA8D;AAAA,MAApBC,aAAoB,uEAAJ,EAAI;;AAC5DC,SAAOC,IAAP,CAAYH,MAAZ,EAAoBI,OAApB,CAA4B,UAACC,OAAD,EAAa;AACvC,QAAMC,WAAWN,OAAQK,OAAR,CAAjB;AACA,QAAME,uBAAuBN,cAAcO,MAAd,CAAqB,CAAEH,OAAF,CAArB,CAA7B;;AAEA,QAAI,QAAOC,QAAP,yCAAOA,QAAP,OAAoB,QAAxB,EAAkC;AAChC,UAAI,OAAOP,QAASM,OAAT,CAAP,KAA8B,WAA9B,IAA6C,QAAON,QAASM,OAAT,CAAP,MAA8B,QAA/E,EAAyF;AACvF,cAAM,IAAII,KAAJ,CAAU,mDAAmDF,qBAAqBG,IAArB,CAA0B,GAA1B,CAA7D,CAAN;AACD;AACDZ,sBAAgBC,QAASM,OAAT,CAAhB,EAAoCC,QAApC,EAA8CC,oBAA9C;AACD,KALD,MAKO;AACL,UAAI,QAAOR,QAASM,OAAT,CAAP,MAA8B,QAAlC,EAA4C;AAC1C,cAAM,IAAII,KAAJ,CAAU,+CAA+CF,qBAAqBG,IAArB,CAA0B,GAA1B,CAAzD,CAAN;AACD;AACDX,cAASM,OAAT,IAAqBC,QAArB;AACD;AACF,GAfD;AAgBD;;AAED,IAAMK,SAAS;AACbC,OAAK;AAAA,WAAMpB,aAAN;AAAA,GADQ;;AAGbqB,OAAK,aAACC,SAAD,EAAe;AAClB,QAAI,QAAOA,SAAP,yCAAOA,SAAP,OAAqB,QAAzB,EAAmC;AACjC,YAAM,IAAIL,KAAJ,CAAU,yBAAV,CAAN;AACD;;AAEDX,oBAAgBN,aAAhB,EAA+BsB,SAA/B;AACD;AATY,CAAf;;kBAYeH,M;AAER,SAASrB,SAAT,GAAsB;AAC3B,SAAOqB,OAAOC,GAAP,EAAP;AACD;;AAEM,SAASrB,SAAT,GAA6B;AAClC,SAAOoB,OAAOE,GAAP,yBAAP;AACD","file":"config.js","sourcesContent":["const configuration = {\r\n  basepath : {\r\n    node : '',\r\n    web  : ''\r\n  },\r\n  fallback : {\r\n    slaveScriptUrl : ''\r\n  }\r\n};\r\n\r\nfunction configDeepMerge(destObj, srcObj, ancestorProps = []) {\r\n  Object.keys(srcObj).forEach((propKey) => {\r\n    const srcValue = srcObj[ propKey ];\r\n    const ancestorPropsAndThis = ancestorProps.concat([ propKey ]);\r\n\r\n    if (typeof srcValue === 'object') {\r\n      if (typeof destObj[ propKey ] !== 'undefined' && typeof destObj[ propKey ] !== 'object') {\r\n        throw new Error('Expected config property not to be an object: ' + ancestorPropsAndThis.join('.'));\r\n      }\r\n      configDeepMerge(destObj[ propKey ], srcValue, ancestorPropsAndThis);\r\n    } else {\r\n      if (typeof destObj[ propKey ] === 'object') {\r\n        throw new Error('Expected config property to be an object: ' + ancestorPropsAndThis.join('.'));\r\n      }\r\n      destObj[ propKey ] = srcValue;\r\n    }\r\n  });\r\n}\r\n\r\nconst config = {\r\n  get: () => configuration,\r\n\r\n  set: (newConfig) => {\r\n    if (typeof newConfig !== 'object') {\r\n      throw new Error('Expected config object.');\r\n    }\r\n\r\n    configDeepMerge(configuration, newConfig);\r\n  }\r\n};\r\n\r\nexport default config;\r\n\r\nexport function getConfig () {\r\n  return config.get();\r\n}\r\n\r\nexport function setConfig (...args) {\r\n  return config.set(...args);\r\n}\r\n"]}